generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  name      String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  foodSpots FoodSpot[] // One user owns many foodspots
  reviews   Review[]
}

model FoodSpot {
  id           String      @id @default(uuid())
  name         String
  description  String      @default("No description provided")
  location     String
  imageUrl     String?
  imagePublicId  String?
  type         String
  isOpen       Boolean     @default(false)
  averageRating Float      @default(0) 
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  owner        User        @relation(fields: [ownerId], references: [id])
  ownerId      String

  reviews      Review[]
  foodItems    FoodItem[]
}

model Review {
  id         String   @id @default(uuid())
  rating     Float      // 1 to 5
  comment    String?
  createdAt  DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])
  userId     String

  foodSpot   FoodSpot @relation(fields: [foodSpotId], references: [id])
  foodSpotId String
}

model FoodItem {
  id          String   @id @default(uuid())
  name        String
  price       Float
  isAvailable Boolean  @default(true)
  imageUrl     String?
  imagePublicId  String?


  foodSpot    FoodSpot @relation(fields: [foodSpotId], references: [id])
  foodSpotId  String

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
